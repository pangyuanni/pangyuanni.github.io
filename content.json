{"meta":{"title":"风晓博客","subtitle":null,"description":null,"author":"风晓","url":"http://www.windknows.com"},"pages":[{"title":"404 Not Found","date":"2020-01-23T08:04:56.888Z","updated":"2020-01-23T02:49:33.658Z","comments":true,"path":"404.html","permalink":"http://www.windknows.com/404.html","excerpt":"","text":"404 Not Found 很抱歉，您访问的页面不存在可能是输入地址有误或该地址已被删除"},{"title":"关于","date":"2020-01-27T05:00:25.774Z","updated":"2020-01-27T05:00:25.764Z","comments":true,"path":"about/index.html","permalink":"http://www.windknows.com/about/index.html","excerpt":"","text":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 这是第一次搭建的博客，请随意留言，但是我不会回复 One More Thing懒加载占位图如果喜欢请拿去：图片链接 欢迎灌水"},{"title":"","date":"2020-01-23T08:04:56.892Z","updated":"2020-01-23T02:49:33.689Z","comments":true,"path":"projects/index.html","permalink":"http://www.windknows.com/projects/index.html","excerpt":"","text":""},{"title":"我的朋友们","date":"2020-01-27T05:03:26.134Z","updated":"2020-01-27T05:03:26.128Z","comments":true,"path":"friends/index.html","permalink":"http://www.windknows.com/friends/index.html","excerpt":"","text":"各位大佬想交换友链的话可以在下方留言，必须要有名称、头像链接、和至少一个标签哦～ 名称： 风晓博客头像： http://i2.tiimg.com/708378/9da6ad9df503cebc.jpg网址： https://www.windknows.com标签： iOS"},{"title":"所有标签","date":"2020-01-23T08:04:56.891Z","updated":"2020-01-23T02:49:33.687Z","comments":true,"path":"blog/tags/index.html","permalink":"http://www.windknows.com/blog/tags/index.html","excerpt":"","text":""},{"title":"所有分类","date":"2020-01-23T08:04:56.891Z","updated":"2020-01-23T02:49:33.686Z","comments":true,"path":"blog/categories/index.html","permalink":"http://www.windknows.com/blog/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"hexo云服务器部署","slug":"hexo-1","date":"2020-01-30T04:18:25.000Z","updated":"2020-01-30T04:20:54.619Z","comments":true,"path":"hexo-1/","link":"","permalink":"http://www.windknows.com/hexo-1/","excerpt":"","text":"前言承接上篇博客，上篇博客中我们在Github上部署成功，但Github上的访问速度在国内较慢，而且免费提供的资源有限，不适于长时期的博客运作，所以在此篇文章中，来说一下，我部署在云服务器的过程以及遇到的问题 首先我们了解一下，hexo利用git更新的流程，部署在Github上和部署在云服务器上没有特别大的本质区别 整个流程就是本地将markdown文件渲染成静态文件，然后Git推送到服务器的r代码仓库，让服务器通过钩子（hook）同步网站根目录，再利用nginx托管这些静态资源，就可以实现访问 环境本地环境Windows10,在本地已经装好了Git，nodejs，hexo，并且在本地已经成功的能调试出来hexo 服务器环境华为的ECS（centos7） 已装好了git，nodejs，以及编译好了nginx（编译这玩意儿有些慢，我编译的时候大概花了将近30分钟） 本地机器配置配置密钥在终端使用git bash生成公匙，命令如下： 1ssh-keygen -t rsa 然后一路回车， 就会在如图示的文件路径下生成一个密钥文件id_rsa.pub 这个密钥文件我们后面会用到，这个密钥相当于我们访问服务器的钥匙 云服务器配置Git，nodejs，Nginx等安装具体安装过程可自行百度 创建git新用户以及进行配置创建git新用户1234adduser git #加入git用户passwd git #配置你的密码chmod 740 /etc/sudoers/ #修改git的sudo使用权限为只读vim /etc/sudoers #编辑sudoers 打开sudoers，找到以下内容 12## Allow root to run any commands anywhereroot ALL=(ALL) ALL 在他的下面加入以下内容 1git ALL=(ALL) ALL 然后wq保存，并且将权限修改回来 1chmod 400 /etc/sudoers 将公钥配置到服务器上就是刚才我们生成的那个文件将该文件内容复制，在云服务器端，切换至刚建好的git用户下，创建.ssh文件和和authorized_keys文件 123su gitmkdir ~/.sshvim ~/.ssh/authorized_keys 然后修改权限 123cd ~chmod 600 .ssh/authorzied_keys # 将文件设置为可读可写chmod 700 .ssh #将该文件夹设置为可读可写可执行（访问） 测试git链接切换到本地机器在本地机器上测试是否能连接到你的远程Git用户 1ssh -v git@SERVER_IP 测试成功会出现如下：如果测试不成功，看看具体的输出信息，通常是公钥没配置好的原因，不用担心，把原来生成的公钥删了，try again 就欧克了 创建网站根目录创建网站的根目录目的是为了让nginx进行托管hexo 生成的静态文件 创建一个目录用于作为网站的根目录，切换到root用 12su rootmkdir /home/hexo # 此目录为网站的根目录 然后变更该目录的所有者 1chown git:git -R /home/hexo 配置nginx安装过程自行度娘就好，编译好nginx后进入nginx的配置文件 1vim conf/nginx.conf 12345678910111213141516171819server&#123; listen 8081; #监听8081端口 server_name 139.159.245.212; #你的服务器名，通常是域名，如果是域名，你就需要监听80端口 root /home/hexo; #网站的根目录,根据自己所建自行修改 location / &#123; &#125; #access_log logs/access.log mylog; error_page 404 /404.html; #配置40x页面 location = /40x.html &#123; &#125; error_page 500 502 503 504 /50x.html; #配置50x页面 location = /50x.html &#123; &#125; &#125; 注意使用 nginx -t 命令检查配置文件的语法是否出错。然后使用 systemctl restart nginx.service 或者 在编译好的nginx目录下使用sbin/nginx -s reload命令重启服务即可 实现自动化部署建立git裸库（就是空的）在root用户下 123su rootcd /home/git # 在 git 用户目录下创建git init --bare blog.git 这时，git 用户的 ~ 目录下就存在一个 blog.git 文件夹，可使用 ls 命令查看。再修改blog.git 的所有者 使用钩子同步网站根目录在这使用的是 post-receive 这个钩子，当 git 有收发的时候就会调用这个钩子。 在 blog.git裸库的 hooks 文件夹中，新建 post-receive 文件。 1vim blog.git/hooks/post-receive 填入以下内容，其中 /home/hexo 为网站目录，根据自己的填入,保存退出。 12#!/bin/shgit --work-tree=/home/hexo --git-dir=/home/git/blog.git checkout -f 该钩子的意思是当本地有提交到服务器时，会将文件放在/home/hexo下 -f这个参数如果在多人协作的博客中可能会引发不好的结果，因为他是强制更新的意思，会将本地版本覆盖掉远程服务器的版本，但是是个人的博客系统就无所谓了 保存后，要赋予这个文件可执行权限。 1chmod +x /home/git/blog.git/hooks/post-receive 本地机器中部署至服务器在本地中，和部署到 github 服务一样，需要先 hexo g 命令生成静态文件，通过 hexo s 命令能够正常进行本地访问，并且确保已经安装了 hexo-deployer-git。 配置Hexohexo 根目录下的 _config.yml 文件，找到 deploy。 1234deploy: type: git repo: git@SERVER:/home/git/blog.git # 填写你的服务器地址 将SERVER替换掉 branch: master # 分支 之后按照正常的流程部署，也可以在hexo项目中添加脚本scripts,脚本内容如下图所示（在package.json文件中添加） 测试自动化部署然后用hexo d 即可推送到远端服务器 然后可以用自己服务器ip访问自己的博客网站了 本次分享就到这儿，有任何问题欢迎留言，我会在第一时间，进行回复！！","categories":[{"name":"教程","slug":"教程","permalink":"http://www.windknows.com/blog/categories/教程/"}],"tags":[{"name":"hexo,blog","slug":"hexo-blog","permalink":"http://www.windknows.com/blog/tags/hexo-blog/"}]},{"title":"使用hexo 搭建博客","slug":"hexo","date":"2020-01-30T04:09:29.000Z","updated":"2020-01-30T04:15:56.672Z","comments":true,"path":"hexo/","link":"","permalink":"http://www.windknows.com/hexo/","excerpt":"","text":"搭建Hexo博客中遇到的问题引言： 本来刚开始想用python的django框架进行个人博客的搭建，但是使用python框架进行搭建的话， 但是进行到一半就不想干了，因为代码量太复杂，太繁琐，后来在网上发现了hexo这个专业的博客框架，搭建起来比较django省时省力，就决定用Hexo来搭建，在本地搭建没什么问题，但部署在云服务器的过程异常艰难。但最终，在神器——百度 的帮助下，问题全部解决 Hexo 说明Hexo是基于nodeJS环境的静态博客，简单来说就是轻量，简易，高逼格的博客工具，hexo是将markdown文件生成静态的html然后将生成的html上传到我们的服务器，简而言之：hexo是个静态页面生成，上传的工具 准备环境先安利一个在windows下非常好用的命令行工具cmder,关于他的好用之处，在另一篇博客有详细说明 Node.js 下载后，双击打开安装，也是一路next，不过在Custom Setup这一步记得选 Add to PATH ,这样你就不用自己去配置电脑上环境变量了 Git 下载安装，下载后一路next就好 用npm安装Hexo npm install -g hexo-cli // npm是安装Nodejs一起安装的包管理工具 这样我们的hexo在本地就差不多完成了，然后我们新建一个空的文件夹，进去初始化博客（这里我新建一个blog的文件夹）然后输入下列命令 hexo init 也可以使用 hexo init ，其中 为保存Hexo的项目路径，然后就等待clone，就会把各种配置文件下载到你的文件夹中了， 然后执行 hexo s 基本的博客就能成功运行了 到这儿我们在本地的博客已经搭建完成了，然后在配置文件（项目根目录下的） _config.yml中修改相关配置，就能对我们的博客进行修改 首先在github上新建一个仓库，注意名字要设成username.github.io 我们将我们的博客部署到github或者coding上的话修改 修改repo地址就行，然后用hexo clean（清除缓存），然后用hexo g（生成静态文件），hexo d （上传至github） 然后我们就可以用外网访问了，地址就是username.github.io这样我们就能访问了 例如我的博客 但是部署到github上的话有内存限制，是300mb 长期使用的话，还是建议部署到自己的云服务器上，我买的是华为的云服务器，系统是centos7 部署大概过程和gihub上类似，就是在云服务器上建一个远程仓库，然后将项目文件，上传到服务器的远程仓库，具体过程，下篇博客在进行分享","categories":[{"name":"教程","slug":"教程","permalink":"http://www.windknows.com/blog/categories/教程/"}],"tags":[{"name":"hexo,blog","slug":"hexo-blog","permalink":"http://www.windknows.com/blog/tags/hexo-blog/"}]}]}